App鸿蒙化
    混合包开发模式，App没有大的修改，只需要新增鸿蒙相关模块用来实现鸿蒙相关特性即可
流程
    Android工程改造
        1 依赖鸿蒙兼容包，将现有的Application继承自HarmonyApplication，仅需要编译依赖，不需要真正打进App中
            compileOnly files('libs/abilityshell\_ide\_java.jar')
        2 AndroidManifest.xml根节点下添加
            <uses-feature android:name="zidane.software.ability" android:required="false">
        3 AndroidManifest.xml application节点下添加
            <meta-data android:name="permZA" android:value="ture">
            <meta-data android:name="multiFrameworkBundle" android:value="ture">
        至此就可以构建出鸿蒙需要的apk了，也可以通过配置变异变体的形式，构建鸿蒙版本的apk
    配置鸿蒙工程
        1 在入口module的build.gradle中增加混入apk文件配置 参见配置1.png
        2 签名改造
            需要根据apk的签名来做鸿蒙应用签名的申请，需要将.keystore或.jks格式的签名文件转换成.p12文件，签名密钥和别名保持不变
        3 配置文件增加属性
            在鸿蒙工程的每个feature module的config.json的app节点下面增加originalName表示混入的apk包名，同时要将bundleName的值也保持一致
        4 entry模块下新建一个空的ability类并配置在config.json里面作为启动入口