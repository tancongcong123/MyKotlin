gradle插件开发
----------------------
插件是什么
    gradle插件（plugin）是一种用于扩展和定制gradle构建系统功能的机智。gradle是一个强大的自动化构建工具，用于构建和管理各种类型的项目，从简单的Java项目到复杂的多模块企业及项目。插件为gradle提供了灵活性，允许开发人员根据特定需求添加自定义行为和功能。
    gradle插件可以执行各种任务，包括编译代码、执行测试、打包文件、生成文档等等。插件可以访问和操作gradle构建模型，如项目、任务、依赖关系等，从而实现对构建过程的控制和定制。
    gradle提供了丰富的生态系统，可以使用现有的官方插件或第三方插件来增强构建过程。许多流行的框架和工具如Android、spring boot、kotlin都有相应的gradle插件，使得与这些技术栈的集成变得更加简单和高效。
    可以在插件中定义自定义任务、配置扩展、操作项目属性、应用其他插件等
插件的意义
    封装：把具体逻辑抽出去，项目只要运行插件就可以了，不需要放在某个build.gradle中而降低其可读性
    复用：把通用逻辑抽出去，用的时候apply插件即可
    定制：编译插件，可以在编译期做一些插桩、hook之类的操作
写在哪里
    plugin可以写在三个地方
        1 跟task一样写在build.gradle文件中，作用域为当前project
        2 写在buildSrc中，作用域为当前project
        3 写在单独的项目中，发布后可以提供给所有项目所有project
自定义插件
    编写一个插件，只需要实现Plugin接口，并实现apply方法即可，通过apply plugin:xxPlugin使用插件
    apply plugin:xxPlugin会把插件放进PluginContainer里面，同时在编译阶段执行plugin接口里面的apply()方法，所以在执行sync之后会有输出
    自定义插件扩展
    